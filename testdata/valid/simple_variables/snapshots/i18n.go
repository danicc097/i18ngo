// Code generated by i18ngo. DO NOT EDIT.
package translations

import (
        "bytes"
        "html/template"
)

// Translator is implemented by all language translators.
type Translator interface {
        MyGreeting(age interface{}, name string) (string, error)
}

// Lang represents available translated languages.
type Lang string

const (
        LangEn Lang = "en"
        LangEs Lang = "es"
)

// NewTranslators initializes all translators.
func NewTranslators() map[Lang]Translator {
        return map[Lang]Translator{
                LangEn: newEn(),
                LangEs: newEs(),
        }
}

type en struct {
        MyGreetingDft *template.Template
}

func newEn() *en {
        return &en{
                MyGreetingDft: template.Must(template.New("MyGreeting").Parse("Hello {{ .Name }}! You are {{ .Age }} years old.")),
        }
}

// MyGreeting renders a properly translated message.
func (t *en) MyGreeting(age interface{}, name string) (string, error) {
        data := struct {
                Age  interface{}
                Name string
        }{
                Age:  age,
                Name: name,
        }
        var tmpl *template.Template
        tmpl = t.MyGreetingDft
        var buf bytes.Buffer
        if err := tmpl.Execute(&buf, data); err != nil {
                return "", err
        }
        return buf.String(), nil
}

type es struct {
        MyGreetingDft *template.Template
}

func newEs() *es {
        return &es{
                MyGreetingDft: template.Must(template.New("MyGreeting").Parse("Hola {{ .Name }}! Tienes {{ .Age }} a√±os.")),
        }
}

// MyGreeting renders a properly translated message.
func (t *es) MyGreeting(age interface{}, name string) (string, error) {
        data := struct {
                Age  interface{}
                Name string
        }{
                Age:  age,
                Name: name,
        }
        var tmpl *template.Template
        tmpl = t.MyGreetingDft
        var buf bytes.Buffer
        if err := tmpl.Execute(&buf, data); err != nil {
                return "", err
        }
        return buf.String(), nil
}
